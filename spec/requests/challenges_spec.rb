# frozen_string_literal: true

require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/challenges', type: :request do
  # Challenge. As you add validations to Challenge, be sure to
  # adjust the attributes here as well.
  current_user = User.first_or_create(email: "rishabh@gmail.com", password: "11111", password_confirmation: "11111", emp_id: "E01")
  let(:valid_attributes) do
    {
      'emp_id' => 'E01',
      'title' => 'Title',
      'description' => '12345',
      'tags' => '12345'
    }
  end
  let(:invalid_attributes) do
    {
      'emp_id' => 'a',
      'title' => '1',
      'description' => '123',
      'tags' => '12'
    }
  end
  describe "GET /index" do
    it "renders a successful response" do
      challenge = current_user.challenges.build(valid_attributes)
      challenge.save
      get challenges_url
      expect(response).to_not be_successful
    end
  end

  describe "GET /show" do
    it "renders a successful response" do
      challenge = current_user.challenges.build(valid_attributes)
      challenge.save
      get challenge_url(challenge)
      expect(response).to_not be_successful
    end
  end

  describe "GET /new" do
    it "renders a successful response" do
      get new_challenge_url
      expect(response).to_not be_successful
    end
  end

  describe "GET /edit" do
    it "render a successful response" do
      challenge = current_user.challenges.build(valid_attributes)
      challenge.save
      get edit_challenge_url(challenge)
      expect(response).to_not be_successful
    end
  end
end